import numpy as npy

gap = 2
reward = 0
mismatch = 1


def match_check(seq1, seq2, i, j):
    if seq1[i] == seq2[j]:
        return reward
    else:
        return mismatch



def get_distance(seq1, seq2):
    rowspan = len(seq1)+1
    colspan = len(seq2)+1
    arr = npy.zeros([rowspan, colspan])
    #print('Size is', rowspan, colspan)
    #Adding gap for first col
    for i in range(1,rowspan):
        arr[i][0] = arr[i-1][0] + gap
    #print('Added gap to col')
    #Adding gap for first row
    for i in range(1,colspan):
        arr[0][i] = arr[0][i-1] + gap
    #print('Added gap to row')

    for i in range(1, rowspan):
        for j in range(1, colspan):
            diagScore = arr[i-1][j-1]
            if(seq1[i-1] == seq2[j-1]):
                diagScore = diagScore + reward
            else:
                diagScore = diagScore + mismatch
            leftScore = arr[i][j-1] + gap
            topScore = arr[i-1][j] + gap
            arr[i][j] = min(diagScore, leftScore, topScore)
            #print('created value for', i,j)

    print(arr[-1][-1])
    return arr[-1][-1]


seq1 = "TGGGCTAAAAGGTCCCTTAGCCTATTTAGAAAAATGGGCCATTAGGAAATTGCAAGGAAGAACCATTCGTGAGAGGGATTAGCTGAGCTCTTTTGACTCTCTAATCACCCCTCCGTGCTCATCCCTCACCTGAAGTGTCCAGCAAATACACCAAGGGTGACGCAGGACAAGCATGAGCCATTCATACTGCTGCAACCAGAGAGAGGGAGCAGGAAAATGAGACAGGGAGGGGGCCAAATCACAGCCCAATTAAGAGATAAAACGTTTAAGGGCTTTGAGGATCTTGTTCTCCAAGTCAGGGGCTTAATCCGCCTGGGGGGGTGGGTATAAAAATGGGCAGTGCTCTGGGCCCTGTCACTGACGTTTGGATGGGAGAGACTGAGCGGTAGAGAGGGAAAGAAGAGAAGAAGAGAGAGAGGAGAGAAAAGGGGGGAGAGAGCGAAACTAGGAAGAGAAGGAAAGTGAGGGGATAGGAAAGGGGCAAAAAACAACAAGCGCGGTAGTAGGCGGGAAAGAAGATGGCAGGGACCGTGACGGAAGCCTGGGATGTGGCAGTATTTGCTGCCCGACGGCGCAATGATGAAGACGACACCACAAGGGATAGCTTGTTCACTTATACCAACAGCAACAATACCCGGGGTGAGCCCAGCAGGGGCATCAAAACACATGGGTCCATCCCAAAGAATGGACTTTGGGTTTCTCTGGAGGTGGGAGGCTTCTTTGATGTTTACAACCCAGATCACAAATGTCATGGGGATGAGTGTTCCAGAAATATGATTTGTCAGTGGTATTGAGAAAGCATCTGAAAAGGTTTTCAGAAAGTGTTGCTAATCCAGCTGCAAGTACGTAGGAGTCTTCGTGTGCAAGTCAGGGAGAAGTGTAAATGTCTCAGTTTTCCTAGTAGAATGATCCCAAATAATATGTGAGGATAGGGACACTGAGGAAGGATGAGACACTTACAGTAGTTTTTTCTTGGCACAGTAACCTGCTGGTAGATGTGTGTGTGGTGATTGCTATACTGGTGAGGCTCCTTCTAACTCCTAACTTTTCCCTTCTCTGGCAGGCCCCTTTGAAGGTCCAAACTATCACATTGCGCCACGCTGGGTCTACAATATCACTTCTGTCTGGATGATTTTTGTGGTCATCGCTTCAATCTTCACCAATGGTTTGGTATTGGTGGCCACTGCCAAATTCAAGAAGCTACGGCATCCTCTGAACTGGATTCTGGTAAACTTGGCGATAGCTGATCTGGGTGAGACGGTTATTGCCAGTACCATCAGTGTCATCAACCAGATCTCTGGCTACTTCATCCTTGGCCACCCTATGTGTGTGCTGGAGGGATACACTGTTTCAACTTGTGGTAAGAGACAAATTGATGGTTTATTTCCCATGTTTTTAGCTTCAATCCCTCCCACATGTCAATATTCCTCATATGTATGTTAAGCCTCCCATGACATAACATCTTGCTCCCCTGTGGTCCTTTCAGACCCCCCCCCCCCCCGCCCCACTGTCTTCCTTTTGTGATGCTTCTCTTTATCAGGAATTTCTAGTGCAGGAATATTTAAATTCTCCTCCTATGCTTTGTCCCTAGCTTCCTCATGTATGCTAATCTCTTGCACTCCAGAAATCAATTGCTGGGAATTTAACAAAGGTTTTATTTGGTCTGCCGCAGCACCCACAACTCCTTTTTTGTGCTCCTGTTTTAGTATCCAAAAAAGGCAGTCCACAAAAGGTGATAGGAGATAAGCTGAAAGGAAGATGGATCCTTGCTTCCATATTCCCAGTGTAGATGCCATCCTGAATTCCATGTCGCTCCTTGCTAGTGACAGCTATCCCTTGTGCTCCTCTTCTCCATAGGTATCTCAGCTCTCTGGTCCTTGGCCGTTATATCTTGGGAACGCTGGGTCGTTGTCTGCAAGCCCTTTGGAAATGTCAAGTTCGATGCCAAACTGGCCGTGGCTGGCATTGTCTTCTCCTGGGTGTGGTCTGCTGTATGGACAGCACCACCCGTCTTTGGCTGGAGTAGGTGAGTGTGAAGTGGAGGGACTAGGACAAGCAGCATTACAGGAGATAATGGTCAGCATGGAAGGAAAGGCTGCCAGTACGAAAGGAGTTAGATTTAGGGGAAGACGTGATTATATACAGCATTCTGTATTCAGCAGAGAAATTCTATGAGGTTTGTTAAACTACCCCAGAAGTCTTGCTCAGGGTGGGCTGCTTCTATTGCACATGAGTAGAGGAAGTAAGCTGTTCAATGGTGTTGGTTGTGGAATTCCTTGCTGGGAAGAAACAAGGAGAGCGCACAGTCTCCTTTAGCCCATCGGACTTCAGAAATAACTTTAGACAGGTGCGGCTGCAAACTCTAAGCAGAAAATCAGTATAAGGGTATTAAGCTCACATTTTGGCATTTAAAGAAGATGTTGGAAACATTTCAAGTATTAACTCCTTTATCCTGTGAATGCCAAACATATAGTTGGCCTAAATTAATTTACATCGTAAGGTTGCATCTATCTTTCTCTTTTCCTGGAACAAATGTCAGTTGTCGTGAACACAAACAGCACTAGGAGAGTCTCAAGGGCACTTTATATGTCGTCTGTGAGAGCAAGTTTTCTCCTTTTTCAACTTTTTCTCTAGGTACTGGCCCCATGGCTTGAAGACCTCATGCGGTCCAGATGTATTCAGTGGCAGTGATGACCCCGGTGTTCTGTCTTACATGATTGTCCTCATGATCACCTGTTGCTTCATTCCCCTGGCTGTCATCCTTCTCTGCTACCTGCAAGTGTGGTTGGCTATCCGTGCGGTAGGTACTCACACTGTATTGTAACTCTCCCTCCCAGGTGGAGTCCTTCACACCCCTTCAAGACTGCCACTTCATGTAGAACACTTCACCTTAATCCTGTCCTTTTTACTAAATCTCATCCTCTTACACATGAAACATCTTTCATATTTGAATTCCAAACTGGGTCCCCCTCTGGAGTGTTTGGTTAGTGACACCCCTCATCTTTCTTGTAAAAAACCTTGTTCACACTGTCAGTTTCTGTAAGATATTCTCAATATACTTGCATCCTTACCAGCATACTGGCATCTGGCCCTTGACTGTTCTTAAGTCCCTATTAAACCTTCCAAGAGGCTTATCTCCGATTTTCATTGGATTTCTCTTTCCCTTTTTCTTAATTAACATTATTTTGCTTATCAGAGGATACCCTGTTTGCAATTGAGTGGTTATGTCTGACCATGGGGTTCTCTCCCCCGCCCCCCCACCATCCAGCTAATTTAAGTTTGTTGAGAGAACCAGTGTGGTTTAGTCCCTTAAGACCAGGACTATGACCTTGGGTGAGTCATACTCTCTGCCTCAGGGAAAGCAATGATAACTTCCCTCTGAACAAACATTATCTGCAATAGGTTCACCTTAGGGACCCTATAAGTCAGAAATAATTTCAAGGCACCCAACACCACCAGAAAAGCCTACAACCTAGGCAAACTGAATCTCTTTCCTCATTGCATCACAAATGTTATGTCCTTTCTAATCCAACTCCTTACCTTTCTCATACACAGGTTGCTGCCCAGCAGAAAGAGTCTGAATCTACACAGAAGGCTGAGAAGGAAGTGTCGAGGATGGTGGTAGTCATGATAATTGCCTATTGCTTCTGCTGGGGGCCATATACGGTCTTTGCCTGTTTTGCTGCTGCCAACCCAGGCTATGCCTTCCACCCCCTTGCAGCTGCTCTGCCTGCTTACTTTGCAAAGAGCGCAACTATCTACAACCCAATTATCTACGTCTTCATGAACAGACAGGTAATTTTCTGTGTCCCCAAGTGGACTGTGACAGGGTTAGCTAGAAGAGTACAGAAAAGAGAGGGCTGCATGGGTTAGGCAGAACACAATATACAGGATGTGTAACCTAGTGAAATGTGAGACTCATAAGGCTCTCCAGATGTTGTAGGGCCACGGCTTCTAGTATCCTTCCTCATTGGCCATGGTGTAAAGGATAACCATCCAATTCCTACCTTGGCCCAGGGGATTCTGCTATGAAAGGTACTTGTTGGAGGAGTGTAGAATCCAAACACAGTTTTAATGAACTTTTCTATCTCTCTCTCCTTCTCCCCACTTCCTTTTTTCTTCTGGCAGTTCCGTAACTGCATAATGCAGCTCTTTGGCAAGAAGGTGGATGATGGCTCTGAATTATCCTCCACCTCCCGCACTGAGGTCTCTTCTGTCTCTAATTCCTCTGTATCGCCGGCATAAGAGCCCCCTGCCTGAATAGCCACAAAGACTGGAGATTCTGCCTCCCAGGAGAGCCCCAGTGAGAACTTCCTCTTTCCTCCTGGACTGATTGCTGCTGAACAGATTCCCTTTGAGAATATGAAATACTGGCCTGCCATCTCTACAGATCCTCTTCTTTGAACTTATACTGCACCCTCAGCTGGGAGTGCTGCTGTTTCTCCCCTGGTGATTTGGGGGAGGGAAATGTTTTTTCTCTCAAAATTGCTTTGGGATGGGGGTGAAGGGGTGAGGAATTCTCTGCTCAAATATCCCATCTTTCTGCAACATTCCCAAGAGGTGTTGTTTGAACACTCTTTTCCCAAGGTCCCGTCCTGACTCACTAGTCTCCCTGTGCACCCCTCCCCCAACTCCCCAGAGGAGCAGAATAAAGGGGGTTCCCTGGGGAAAGCATATCGCTTTTGTAAAGCAAGTCTATTGGAGGCCGTCTTAGCAGTGAACCTGCCCCTCCATCCGCATTTCCCCCCATGATCCACATCCTTTGACTGGATGGACTGATATCCCAAGAGGGAAGATTACCCACAGTTTGGCAACACAGGCCATATTCCCTTTTTCTCTGCCCCTCCTATGAAGTTTTCACTGGTGCCAGGGAGTGCATTGAAGGGGGCCAAGAGGAGGAAAAGTTTGTCCCCCGAGGTGTCTGTGCCTCAGCCAAGTCGAATGCATTGAATCTTAATTCTGTTGAAAGTGGGCATGATTCTGACACGGGTAGAACCAACGAGACTCAGCATGATCCACCTCGGTCATTGCAGGGGCTTTGTGCTTCTTCCCAGCATGGCTCAACTGGAACCATTCTGTACATAGTGTTTGATACTAAAGCCTGTTGTGTCCCTGGGACATCTAGCTAGAAATGCAAAAGGGAAAATGACCAAAAAAATCTGCAGCAGTGAGAGTGAGATAGAGAATAAAGATTTTTAACTTCTGTATATAAGTTCTGTTCTTATCCTACCAAAAAAAAAAAATCAAACCCTGATACACCCAAAGAATGCCCTTTGCCCAGAAGTGTTTGCTCTATATCTATGCATGCGGGTGAGATGGCGGTGACTGCAGTGGAGGAAGAGGTTGGGGGTCTGCTTGGTGATTACAGACTATGTGGAGAGAAGACTCAG"

seq2 = seq1
get_distance(seq1, seq2)
